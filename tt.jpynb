# Let's further enhance the notebook to include:
# Title (Markdown) -> Graph output (Matplotlib/Seaborn) -> Code block
# Save a new notebook structured for GitHub presentation.

nb = nbf.v4.new_notebook()

nb.cells = [
    nbf.v4.new_markdown_cell("# Data Visualization - Battery Efficiency Dataset\n\nThis notebook:\n- Loads the processed dataset\n- Visualizes different aspects of battery efficiency\n"),
    nbf.v4.new_code_cell("""
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the processed data
data = pd.read_csv('/mnt/data/battery_efficiency_processed.csv')
sns.set(style='whitegrid')
"""),
    
    # Battery Life Distribution Title
    nbf.v4.new_markdown_cell("## Battery Life Distribution"),
    # Battery Life Distribution Graph
    nbf.v4.new_code_cell("""
plt.figure(figsize=(8,6))
sns.histplot(data['Battery Life (minutes)'], bins=20, kde=True)
plt.title('Distribution of Battery Life (Minutes)')
plt.xlabel('Battery Life (Minutes)')
plt.ylabel('Frequency')
plt.grid(True)
plt.savefig('/mnt/data/battery_life_distribution.png')
plt.show()
"""),
    
    # Device Temperature vs Battery Life Title
    nbf.v4.new_markdown_cell("## Device Temperature vs Battery Life"),
    nbf.v4.new_code_cell("""
plt.figure(figsize=(8,6))
sns.scatterplot(x='Device Temperature (°C)', y='Battery Life (minutes)', hue='Task Type', data=data)
plt.title('Device Temperature vs Battery Life')
plt.xlabel('Device Temperature (°C)')
plt.ylabel('Battery Life (Minutes)')
plt.legend(title='Task Type', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)
plt.tight_layout()
plt.savefig('/mnt/data/temperature_vs_battery.png')
plt.show()
"""),
    
    # CPU Utilization vs Battery Life Title
    nbf.v4.new_markdown_cell("## CPU Utilization vs Battery Life"),
    nbf.v4.new_code_cell("""
plt.figure(figsize=(8,6))
sns.scatterplot(x='CPU Utilization (%)', y='Battery Life (minutes)', hue='Device Model', data=data)
plt.title('CPU Utilization vs Battery Life')
plt.xlabel('CPU Utilization (%)')
plt.ylabel('Battery Life (Minutes)')
plt.legend(title='Device Model', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)
plt.tight_layout()
plt.savefig('/mnt/data/cpu_vs_battery.png')
plt.show()
"""),
    
    # Memory Usage vs Battery Life Title
    nbf.v4.new_markdown_cell("## Memory Usage vs Battery Life"),
    nbf.v4.new_code_cell("""
plt.figure(figsize=(8,6))
sns.scatterplot(x='Memory Usage (% RAM)', y='Battery Life (minutes)', hue='Task Type', data=data)
plt.title('Memory Usage vs Battery Life')
plt.xlabel('Memory Usage (% RAM)')
plt.ylabel('Battery Life (Minutes)')
plt.legend(title='Task Type', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)
plt.tight_layout()
plt.savefig('/mnt/data/memory_vs_battery.png')
plt.show()

print("All visualizations are generated and saved as PNG files.")
""")
]

# Save to a final presentation-ready file
final_github_ready_path = '/mnt/data/github_ready_data_visualization.ipynb'
with open(final_github_ready_path, 'w') as f:
    nbf.write(nb, f)

final_github_ready_path
